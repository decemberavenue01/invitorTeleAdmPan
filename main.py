import os
import asyncio
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher
from aiogram.types import ChatJoinRequest, CallbackQuery, Message, InputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

from storage import init_db, add_user_to_db, get_all_users


# ‚Äî –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
from config import BOT_TOKEN, ADMIN_IDS, CHANNEL_ID

# ‚Äî –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(BOT_TOKEN)
dp = Dispatcher()

# ‚Äî –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ (Chat Join Request)
async def on_join_request(req: ChatJoinRequest):
    # 1) –ê–≤—Ç–æ-–æ–¥–æ–±—Ä–µ–Ω–∏–µ
    await bot.approve_chat_join_request(req.chat.id, req.from_user.id)

    # 2) –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    await add_user_to_db(req.from_user.id)

    # 3) –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
    for admin_id in ADMIN_IDS:
        await bot.send_message(
            admin_id,
            f"üë§ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç –æ—Ç @{req.from_user.username or req.from_user.id}"
        )

    # 4) –ü–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="welcome_step2")
    )
    await bot.send_photo(
        chat_id=req.from_user.id,
        photo=InputFile("welcome.jpg"),
        caption="<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n–ó–¥–µ—Å—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ‚Ä¶",
        reply_markup=kb,
        parse_mode="HTML"
    )

# ‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ ¬´–î–∞–ª–µ–µ¬ª
async def welcome_step2(callback: CallbackQuery):
    await callback.answer()

    me = await bot.get_me()
    promo_text = "–∑–¥–µ—Å—å_—Ç–≤–æ–π_—à–∞–±–ª–æ–Ω_—Ç–µ–∫—Å—Ç–∞"
    deep_link = f"https://t.me/{me.username}?start={promo_text}"

    kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ üì©", url=deep_link)
    )
    await bot.send_photo(
        chat_id=callback.from_user.id,
        photo=InputFile("welcome2.jpg"),
        caption="<i>–í–æ—Ç –≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è‚Ä¶</i>",
        reply_markup=kb,
        parse_mode="HTML"
    )

    # –ß–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    await asyncio.sleep(60)
    await bot.send_message(callback.from_user.id, "üîï –ù–µ –æ—Ç–∫–ª—é—á–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.")

# ‚Äî –ö–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω–∞: –Ω–∞—á–∞–ª–æ —Ä–∞—Å—Å—ã–ª–∫–∏
async def cmd_broadcast_start(msg: Message):
    await msg.reply(
        "–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç –∏–ª–∏ –º–µ–¥–∏–∞) –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.\n"
        "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTML/Markdown –∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏."
    )

# ‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ (–æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
async def cmd_broadcast_send(msg: Message):
    users = await get_all_users()
    sent, failed = 0, 0

    for user_id in users:
        try:
            # –¢–µ–∫—Å—Ç
            if msg.text:
                await bot.send_message(user_id, msg.text, parse_mode="HTML")
            # –§–æ—Ç–æ
            elif msg.photo:
                file_id = msg.photo[-1].file_id
                await bot.send_photo(
                    user_id, file_id,
                    caption=msg.caption or "", parse_mode="HTML"
                )
            # –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫
            elif msg.video_note:
                await bot.send_video_note(user_id, msg.video_note.file_id)
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã (—Å—Ç–∏–∫–µ—Ä—ã, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ç.–¥.)

            # –ö–Ω–æ–ø–∫–∏ (–µ—Å–ª–∏ –±—ã–ª–∏)
            if msg.reply_markup:
                await bot.send_message(user_id, " ", reply_markup=msg.reply_markup)

            sent += 1
            await asyncio.sleep(0.05)
        except:
            failed += 1

    await msg.reply(f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ\n–£—Å–ø–µ—à–Ω–æ: {sent}\n–ù–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {failed}")

# ‚Äî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
dp.chat_join_request.register(on_join_request)
dp.callback_query.register(welcome_step2, lambda c: c.data == "welcome_step2")
dp.message.register(cmd_broadcast_start, Command("broadcast"), lambda m: m.from_user.id in ADMIN_IDS)
dp.message.register(
    cmd_broadcast_send,
    lambda m: m.from_user.id in ADMIN_IDS
              and m.reply_to_message
              and "–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç –∏–ª–∏ –º–µ–¥–∏–∞)" in m.reply_to_message.text
)

# ‚Äî –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
async def on_startup():
    await init_db()

if __name__ == "__main__":
    dp.run_polling(bot, skip_updates=True, on_startup=on_startup)
